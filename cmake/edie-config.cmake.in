@PACKAGE_INIT@

include("${CMAKE_CURRENT_LIST_DIR}/edie-targets.cmake")
set_and_check(EDIE_INCLUDE_DIRS "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")
set_and_check(EDIE_LIBRARY_DIR "@PACKAGE_CMAKE_INSTALL_LIBDIR@")
set_and_check(EDIE_DATA_DIR "@PACKAGE_CMAKE_INSTALL_DATADIR@")
set(EDIE_BIN_DIR "@PACKAGE_CMAKE_INSTALL_BINDIR@")
set(EDIE_LIBRARIES EDIE::EDIE)
check_required_components(EDIE)

set(EDIE_BUNDLED_THIRD_PARTY_LIBS @INSTALL_THIRD_PARTY@)
if(EDIE_BUNDLED_THIRD_PARTY_LIBS)
    # TODO: This info could be generated with a custom Conan deployer instead
    # e.g. https://github.com/conan-io/conan-extensions/blob/main/extensions/deployers/runtime_zip_deploy.py
    add_library(edie_third_party INTERFACE)
    add_library(nlohmann_json::nlohmann_json ALIAS edie_third_party)
    add_library(spdlog::spdlog ALIAS edie_third_party)
    add_library(spdlog_setup::spdlog_setup ALIAS edie_third_party)
    target_include_directories(edie_third_party INTERFACE "${EDIE_INCLUDE_DIRS}/third_party")
    target_link_directories(edie_third_party INTERFACE "${EDIE_LIBRARY_DIR}/third_party")
    target_link_libraries(edie_third_party INTERFACE fmt$<$<CONFIG:Debug>:d> spdlog$<$<CONFIG:Debug>:d>)
    target_compile_definitions(edie_third_party INTERFACE SPDLOG_FMT_EXTERNAL SPDLOG_COMPILED_LIB)
else()
    include(CMakeFindDependencyMacro)
    find_dependency(nlohmann_json REQUIRED CONFIG)
    find_dependency(spdlog REQUIRED CONFIG)
    find_dependency(spdlog_setup REQUIRED CONFIG)
endif()
